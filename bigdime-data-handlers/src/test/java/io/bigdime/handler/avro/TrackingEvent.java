/**
 * Copyright (C) 2015 Stubhub.
 */
/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package io.bigdime.handler.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TrackingEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TrackingEvent\",\"namespace\":\"io.bigdime.handler.avro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"properties\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"default\":null},{\"name\":\"timestamp\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties;
  @Deprecated public java.lang.CharSequence timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TrackingEvent() {}

  /**
   * All-args constructor.
   */
  public TrackingEvent(java.lang.CharSequence name, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties, java.lang.CharSequence timestamp) {
    this.name = name;
    this.properties = properties;
    this.timestamp = timestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return properties;
    case 2: return timestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: properties = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 2: timestamp = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'properties' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.properties = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public java.lang.CharSequence getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.CharSequence value) {
    this.timestamp = value;
  }

  /** Creates a new TrackingEvent RecordBuilder */
  public static io.bigdime.handler.avro.TrackingEvent.Builder newBuilder() {
    return new io.bigdime.handler.avro.TrackingEvent.Builder();
  }
  
  /** Creates a new TrackingEvent RecordBuilder by copying an existing Builder */
  public static io.bigdime.handler.avro.TrackingEvent.Builder newBuilder(io.bigdime.handler.avro.TrackingEvent.Builder other) {
    return new io.bigdime.handler.avro.TrackingEvent.Builder(other);
  }
  
  /** Creates a new TrackingEvent RecordBuilder by copying an existing TrackingEvent instance */
  public static io.bigdime.handler.avro.TrackingEvent.Builder newBuilder(io.bigdime.handler.avro.TrackingEvent other) {
    return new io.bigdime.handler.avro.TrackingEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for TrackingEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TrackingEvent>
    implements org.apache.avro.data.RecordBuilder<TrackingEvent> {

    private java.lang.CharSequence name;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> properties;
    private java.lang.CharSequence timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(io.bigdime.handler.avro.TrackingEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(io.bigdime.handler.avro.TrackingEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.properties)) {
        this.properties = data().deepCopy(fields()[1].schema(), other.properties);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TrackingEvent instance */
    private Builder(io.bigdime.handler.avro.TrackingEvent other) {
            super(io.bigdime.handler.avro.TrackingEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.properties)) {
        this.properties = data().deepCopy(fields()[1].schema(), other.properties);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public io.bigdime.handler.avro.TrackingEvent.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public io.bigdime.handler.avro.TrackingEvent.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'properties' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getProperties() {
      return properties;
    }
    
    /** Sets the value of the 'properties' field */
    public io.bigdime.handler.avro.TrackingEvent.Builder setProperties(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.properties = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'properties' field has been set */
    public boolean hasProperties() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'properties' field */
    public io.bigdime.handler.avro.TrackingEvent.Builder clearProperties() {
      properties = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.CharSequence getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public io.bigdime.handler.avro.TrackingEvent.Builder setTimestamp(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.timestamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'timestamp' field */
    public io.bigdime.handler.avro.TrackingEvent.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public TrackingEvent build() {
      try {
        TrackingEvent record = new TrackingEvent();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.properties = fieldSetFlags()[1] ? this.properties : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
